//(c) 2015-2017 XolioWare Interactive
//http://chunkstories.xyz
//http://xol.io

allprojects {
	repositories {
		mavenLocal()
		mavenCentral()
		jcenter()
	}
}

//version = '2017.07.12'
version = 'Alpha 1.0rc2'
description = 'A voxel game and game engine designed for modders'
group = 'io.xol.chunkstories'

task buildAll {
	dependsOn ':client:shadowJar'
	dependsOn ':server:shadowJar'
	dependsOn ':converter:shadowJar'
	
	dependsOn ':core:jar'
	dependsOn ':common:jar'
}

task uploadAll {
	dependsOn ':client:uploadShadow'
	dependsOn ':server:uploadShadow'
	//dependsOn ':converter:shadowJar'
	
	dependsOn ':core:uploadArtifacts'
	dependsOn ':common:uploadArtifacts'
}

subprojects {

	group = rootProject.group

	//We add those dependencies to any Java subproject
	plugins.withType(JavaPlugin) {
		//println name + ' has java'
		//println sourceCompatibility
		
		compileJava.options.compilerArgs << '-Xlint:-deprecation'
		compileJava.options.compilerArgs << '-Xlint:none'
		
		//TODO: Split these even more, the server likely doesn't have an use for jorbis.
		dependencies {
			// https://mvnrepository.com/artifact/org.fusesource.jansi/jansi
			compile group: 'org.fusesource.jansi', name: 'jansi', version: '1.15'

			// https://mvnrepository.com/artifact/org.l33tlabs.twl/pngdecoder
			compile group: 'org.l33tlabs.twl', name: 'pngdecoder', version: '1.0'

			// https://mvnrepository.com/artifact/net.jpountz.lz4/lz4
			compile group: 'net.jpountz.lz4', name: 'lz4', version: '1.3.0'

			// https://mvnrepository.com/artifact/com.googlecode.soundlibs/jorbis
			compile group: 'com.googlecode.soundlibs', name: 'jorbis', version: '0.0.17.4'

			// https://mvnrepository.com/artifact/com.googlecode.json-simple/json-simple
			compile group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'
			
			compile group: 'io.xol.chunkstories', name: 'api', version: '108'
		}
	}
	
	task artifacts {
		group = "Help"
			description = "Displays the artifacts associated with each configuration of " + project
			doFirst {
				configurations.findAll().each { config ->
				println "${config}:"
				config.artifacts.getFiles().each { file -> println "" + file}
				println ' '
			}
		}
	}
}