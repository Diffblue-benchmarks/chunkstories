//(c) 2015-2017 XolioWare Interactive
//http://chunkstories.xyz
//http://xol.io

allprojects {
	repositories {
		mavenLocal()
		mavenCentral()
		jcenter()
		maven {
			url "http://maven.xol.io/repository/public/"
		}
	}
}

//version = '2017.09.23'
version = 'Alpha1.0rc5_03'
description = 'A voxel game and game engine designed for modders'
group = 'io.xol.chunkstories'

ext {
	apiRevisionBuiltAgainst = '114'
	contentRevisionBuiltAgainst = '122'
	
	actualContentLocation = "core_content.zip"
}

task buildAll {
	dependsOn ':client:shadowJar'
	dependsOn ':server:shadowJar'
	dependsOn ':converter:shadowJar'
	
	//dependsOn ':core:jar'
	dependsOn ':common:jar'

	dependsOn ':launcher:createExe'
}

task uploadAll {
	dependsOn ':client:uploadShadow'
	dependsOn ':server:uploadShadow'
	//dependsOn ':converter:shadowJar'
	
	dependsOn ':core:uploadArchives'
	dependsOn ':common:uploadArchives'
}

import org.gradle.internal.os.OperatingSystem
		
//For all subprojects...
subprojects {
	//Put them all in the io.xol.chunkstories group.
	group = rootProject.group

	plugins.withType(JavaPlugin) {
		//Setups compilation args
		compileJava.options.compilerArgs << '-Xlint:-deprecation'
		compileJava.options.compilerArgs << '-Xlint:none'
			
		compileJava.options.encoding = 'UTF-8'

		switch ( OperatingSystem.current() ) {
			case OperatingSystem.WINDOWS:
				project.ext.lwjglNatives = "natives-windows"
				break
			case OperatingSystem.LINUX:
				project.ext.lwjglNatives = "natives-linux"
			break
			case OperatingSystem.MAC_OS:
				project.ext.lwjglNatives = "natives-macos"
				break
		}

		project.ext.natives = ["natives-windows", "natives-linux", "natives-macos"];
		project.ext.lwjglVersion = "3.1.1"

		configurations {
			multiplatform {
				extendsFrom runtime
			}
		}

		dependencies {
			compile "org.lwjgl:lwjgl:${lwjglVersion}"
			compile "org.lwjgl:lwjgl-jemalloc:${lwjglVersion}"
			//When running on our debug computer, it's safe to assume the OS that will run the game is the same than the one who'll compile it.
			runtime "org.lwjgl:lwjgl:${lwjglVersion}:${lwjglNatives}"
			runtime "org.lwjgl:lwjgl-jemalloc:${lwjglVersion}:${lwjglNatives}"
			//When compiling a redistribuable jar, we need ALL natives in it!
			project.ext.natives.each {
				multiplatform ("org.lwjgl:lwjgl:${lwjglVersion}:" + it)
				multiplatform "org.lwjgl:lwjgl-jemalloc:${lwjglVersion}:" + it
			}
		}
		
		//Global dependencies
		dependencies {
			compile group: 'org.fusesource.jansi', name: 'jansi', version: '1.15'
			compile group: 'org.l33tlabs.twl', name: 'pngdecoder', version: '1.0'
			compile group: 'net.jpountz.lz4', name: 'lz4', version: '1.3.0'
			compile group: 'com.googlecode.soundlibs', name: 'jorbis', version: '0.0.17.4'
			compile group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'
			
			compile group: 'io.xol.chunkstories', name: 'api', version: apiRevisionBuiltAgainst
			
			testCompile 'junit:junit:4.12'
		}
	}

	//Makes this available everywhere
	ext {
		apiRevisionBuiltAgainst = rootProject.apiRevisionBuiltAgainst
	}
	
	//Adds this debug task
	task artifacts {
		group = "Help"
			description = "Displays the artifacts associated with each configuration of " + project
			doFirst {
				configurations.findAll().each { config ->
				println "${config}:"
				config.artifacts.getFiles().each { file -> println "" + file}
				println ' '
			}
		}
	}

	configurations {
		deployerJars
	}

	dependencies {
		deployerJars "org.apache.maven.wagon:wagon-ssh:2.12" //<-- fuck this fuck this fuck this
	}
}

