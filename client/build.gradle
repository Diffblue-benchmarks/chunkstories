/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.5/userguide/tutorial_java_projects.html
 */

 
// Apply the java plugin to add support for Java
apply plugin: 'java'

// Apply the application plugin to add support for building an application
apply plugin: 'application'

/* LWJGL3 deps */

/*
import org.gradle.internal.os.OperatingSystem

switch ( OperatingSystem.current() ) {
	case OperatingSystem.WINDOWS:
		project.ext.lwjglNatives = "natives-windows"
		break
	case OperatingSystem.LINUX:
		project.ext.lwjglNatives = "natives-linux"
	break
	case OperatingSystem.MAC_OS:
		project.ext.lwjglNatives = "natives-macos"
		break
}

project.ext.lwjglVersion = "3.1.1"
*/
dependencies {

	//LWJGL3 masterrace
	/*compile "org.lwjgl:lwjgl:${lwjglVersion}"
	compile "org.lwjgl:lwjgl-glfw:${lwjglVersion}"
	compile "org.lwjgl:lwjgl-jemalloc:${lwjglVersion}"
	compile "org.lwjgl:lwjgl-openal:${lwjglVersion}"
	compile "org.lwjgl:lwjgl-opengl:${lwjglVersion}"
	compile "org.lwjgl:lwjgl-stb:${lwjglVersion}"
	compile "org.lwjgl:lwjgl-tinyfd:${lwjglVersion}"
	runtime "org.lwjgl:lwjgl:${lwjglVersion}:${lwjglNatives}"
	runtime "org.lwjgl:lwjgl-glfw:${lwjglVersion}:${lwjglNatives}"
	runtime "org.lwjgl:lwjgl-jemalloc:${lwjglVersion}:${lwjglNatives}"
	runtime "org.lwjgl:lwjgl-openal:${lwjglVersion}:${lwjglNatives}"
	runtime "org.lwjgl:lwjgl-opengl:${lwjglVersion}:${lwjglNatives}"
	runtime "org.lwjgl:lwjgl-stb:${lwjglVersion}:${lwjglNatives}"
	runtime "org.lwjgl:lwjgl-tinyfd:${lwjglVersion}:${lwjglNatives}"*/
	
	// https://mvnrepository.com/artifact/org.lwjgl.lwjgl/lwjgl
	compile group: 'org.lwjgl.lwjgl', name: 'lwjgl', version: '2.9.2'
}

//project.ext.lwjglVersion = "2.9.3"

// DÃ©pendances des autres sous-projets
dependencies {
    compile project(':api')
    compile project(':core')
    compile project(':common')
}

// Define the main class for the application
mainClassName = 'io.xol.chunkstories.client.Client'

println project.projectDir
println rootProject.projectDir

run { 
    /* Need to split the space-delimited value in the exec.args */
	println "Running client; Setting project dir : " + rootProject.projectDir
	
	workingDir = rootProject.projectDir
    args new String("--dir="+rootProject.projectDir).split()   

	//systemProperty 'java.library.path', file("build/natives/${getOs()}")	
}

// Iterate over the source sets
sourceSets.all {
    println name
}